---
title: "dayy2"
output: html_document
---
install.packages("tinytex")
library(tinytex)

t.test()
iris
levels(iris$Species)

#anova , completly randomize test(crd)

model <- aov(Sepal.Length ~ Species, data = iris)
summary(model)
TukeyHSD(model)

#anova between two variables

x <- subset(iris, iris$Species=="virginica" | iris$Species=="setosa")
model <- aov(Sepal.Length ~ Species, data = x)
summary(model)


#two way anova
data()
ToothGrowth
head(ToothGrowth)
model3 <- aov(len ~ supp + as.factor(dose), data = ToothGrowth)
summary(model3)
TukeyHSD(model3)
str(ToothGrowth$dose)
str(as.factor(ToothGrowth$dose))

##one way
library(ggplot2)
ggplot(ToothGrowth, aes(supp, len , col= as.factor(dose)))+geom_boxplot()

#another way
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
ggplot(data=ToothGrowth, aes(x=dose, y=len))+geom_boxplot()


##another way, it's advance level
install.packages("ggsignif")
library(ggsignif)
ggplot(data=ToothGrowth, aes(x=dose, y=len)) +geom_boxplot()+
  geom_signif(comparisons =  list(c("0.5", "1"),
                                  c("0.5", "2"),
                                  c("1", "2")),
              map_signif_level = TRUE, 
              y_position =  c(30,35,40))

##
p <- ggplot(data = ToothGrowth, aes(x=dose, y=len, fill=dose)) +
  geom_bar(stat="identity")+ 
  geom_signif(comparisons =  list(c("0.5", "1"),
                                  c("0.5", "2"),
                                   c("1", "2")),
                        map_signif_level = TRUE, 
                      y_position =  c(500,550,600))+theme_minimal()

  p

##excercise
ggplot(data=ToothGrowth, aes(x=dose, y=len)) + geom_bar() +
  geom_signif(comparisons =  list(c("0.5", "1"),
                                  c("0.5", "2"),
                                  c("1", "2")),
              map_signif_level = TRUE, 
              y_position =  c(30,35,40))


## how to show stastical lattering on plot
#1.anova model

chickwts
model5 <- aov(weight ~  feed, data = chickwts)
tukey <- TukeyHSD(model5)
tukey

#lettering of model
install.packages("multcompView")
library(multcompView)
abc <- multcompLetters4(model5, tukey)
abc

#calculation of mean
library(dplyr)
m1 <- group_by(chickwts, feed) %>%
  summarise(w=mean(weight), std=sd(weight)) %>% arrange(desc(w))
m1

#combine data in col of data frame 
abc <- as.data.frame.list(abc$feed)
m1$abc <- abc$Letters

#grap plot
q1 <- ggplot(m1, aes(feed, w, fill=feed))+geom_bar(stat = "identity")+
  geom_errorbar(aes(ymin=w-std, ymax=w+std), width= 0.25)+
  geom_text(aes(label=abc, y=w+std), vjust=-0.5)+
  theme_minimal()

library(plotly)
ggplotly(q1)